<launch>

  <!-- pointcloud_to_laserscan IS ALSO AVAILABLE AS A NODELET -->
  <!-- IF TIME, IMPLEMENT AS NODELET AND COMPARE EFFICIENCY  -->
  <!-- http://wiki.ros.org/pointcloud_to_laserscan -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/velodyne_points/for_costmap"/>
    <remap from="scan" to="emulated_scan"/>
    <rosparam>
      max_height: 0.4
      min_height: 0.02
      angle_min: -3.1415
      angle_max: 3.1415
      angle_increment: 0.01 <!-- too high and Jackal think's there are gaps in the wall it's driving next to that it can fit through, leading to a crash -->
      scan_time: 0.1 <!-- time between scans -->
      range_min: 0.1
      range_max: 140
      <!-- transform_tolerance: 0.01 -->
      concurrency_level: 0
      <!-- Number of threads to use for processing pointclouds. If 0, automatically detect number of cores and use the equivalent number of threads. Input queue size for pointclouds is tied to this parameter. In nodelet form, number of threads is capped by the nodelet manager configuration. -->
      use_inf: true
      <!-- If disabled, report infinite range (no obstacle) as range_max + 1. Otherwise report infinite range as +inf. Associated with the inf_is_valid parameter for costmap_2d obstacle layers. -->
    </rosparam>
  </node>

</launch>
