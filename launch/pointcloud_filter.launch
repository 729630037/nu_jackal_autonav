<launch>

  <!-- ARGS NOT WORKING AS EXPECTED AT THE MOMENT, FIX LATER -->
  <arg name="xy_range" value="4.0" />
  <arg name="z_range" value="0.1" />
  <arg name="x_offset" value="0.12" />
  <arg name="y_offset" value="0.0" />
  <arg name="z_offset" value="0.338" />

  <!-- START NODELET MANAGER -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>

  <!-- now, create new subset of pointcloud to use for costmap -->
  <!-- filter out points too high, too low, or too far away -->
  <node pkg="nodelet" type="nodelet" name="cropbox" args="load pcl/CropBox pcl_manager" output="screen">
    <remap from="~input" to="/velodyne_points" />
    <remap from="~output" to="/velodyne_points/cropbox" />
    <rosparam>
      min_x: -4.12
      max_x: 3.88
      min_y: -4.0
      max_y: 4.0
      min_z: -0.338
      max_z: 0.112
    </rosparam>
  </node>

  <!-- get rid of pesky noise using radius outlier filter -->
  <node pkg="nodelet" type="nodelet" name="radius_outlier_removal" args="load pcl/RadiusOutlierRemoval pcl_manager" output="screen">
    <remap from="~input" to="/velodyne_points/cropbox" />
    <remap from="~output" to="/velodyne_points/no_outliers" />
    <rosparam>
      radius_search: 0.05 # Must have min_neighbors w/in this radius to survive
      min_neighbors: 3
    </rosparam>
  </node>

  <!-- downsample and clean NaNs, then output for costmap -->
  <node pkg="nodelet" type="nodelet" name="voxel" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/velodyne_points/no_outliers" />
    <remap from="~output" to="/velodyne_points/voxeled" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -0.338
      filter_limit_max: 0.112
      leaf_size: 0.025
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- custom node to filter out groundplane -->
  <node pkg="nu_jackal_autonav" type="conical_filter" name="conical_filter" output="screen" />

</launch>
